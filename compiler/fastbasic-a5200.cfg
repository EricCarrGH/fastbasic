#
# FastBasic - Fast basic interpreter for the Atari 8-bit computers
# Copyright (C) 2017-2022 Daniel Serpell
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>
#

# Linker configuration file for placing the code in a CARTRIDGE
# -------------------------------------------------------------

SYMBOLS {
    __CARTSIZE__:       type = weak,    value = $8000;  # Default to 32KB cartridge
    __CART_PAL__:       type = weak,    value = $02;    # Default to PAL
}


MEMORY {
# Interpreter, at the start of usable ZP
    INTERP:                  file = "",  start = $001E,  size = $0012;
# Non initialized ZP
    ZP:       define = yes,  file = "",  start = $0030,  size = $00D0;
# Low memory - used for interpreter non-initialized variables
#    LOWMEM:   define = yes,  file = "",  start = $021C,  size = $00E4;
# Main memory - used for writable DATA
    MAIN:     define = yes,  file = "",  start = $0380,  size = $3D00;
# Cartridge ROM
    ROM:      define = yes,  file = %O,  start = $C000 - __CARTSIZE__,  size = __CARTSIZE__ - $19,  fill = yes,  fillval = $FF;
# Cartridge headers
    CARTPAL:                 file = %O,  start = $BFE7,  size = $0001;
    CARTNAME:                file = %O,  start = $BFE8,  size = $0014,  fill = yes,  fillval = $40;
    CARTYEAR:                file = %O,  start = $BFFC,  size = $0002,  fill = yes,  fillval = $59;
    CARTENTRY:               file = %O,  start = $BFFE,  size = $0002;
}

SEGMENTS {
    ZEROPAGE:   load = ZP,                type = zp,  optional = yes;
    JUMPTAB:    load = ROM,               type = ro,                  define = yes, align = $100;
    RUNTIME:    load = ROM,               type = ro,                  define = yes;
    BYTECODE:   load = ROM,               type = ro,                  define = yes;
    CODE:       load = ROM,               type = rw,                  define = yes;
    INTERP:     load = ROM, run = INTERP, type = rw,                  define = yes;
    DATA:       load = ROM, run = MAIN,   type = rw,                  define = yes;
    BSS:        load = MAIN,              type = bss, optional = yes, define = yes;
    HEAP:       load = MAIN,              type = bss, optional = yes, define = yes, align = $100;
    CARTPAL:    load = CARTPAL,           type = ro;
    CARTNAME:   load = CARTNAME,          type = ro;
    CARTYEAR:   load = CARTYEAR,          type = ro;
    CARTENTRY:  load = CARTENTRY,         type = ro;
}

